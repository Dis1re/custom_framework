// React
// Помимо React'a есть десятки других фреймворков, самые популярные из них это Vue и Angular. 
// Разработка на React также как и на других фреймворках ведется локальном сервере, 
// который обеспечивает доступ к приложению из локальной сети и автоматическое обновление 
// страницы при изменении кода. Локальный сервер устанавливается вместе с фреймворком с помощью 
// пакетных менеджеров. Пакетный менеджер — это специальная программа, которая умеет устанавливать необходимые 
// зависимости в указанное место. Выкачивает он их из интернета. Мы будем пользоваться пакетным менеджером npm, 
// он устанавливается автоматически при установке локального сервера (node.js). Все современные фреймворки 
// поддерживают новый стандарт языка. Отличие заключается в возможности подключать скриптовые файлы внутри 
// скриптовых файлов. Код, расположенный внутри файла, замкнут внутри файла и недоступен наружу. 
// Чтобы достать код наружу надо писать специальные конструкции. 

// Импортирование и экспортирование файлов
// file1.js
function f1(){}
function f2(){}
const a = 17;

export default f1; // Чтобы достать из файла код используется команда export.
export {f2,a}; // Несколько вещей 


// file2.js
import f1 from file1;
import {f2, a} from file1;


// Структура проекта
// node_modules - папка в которую устанавливаются вообще все зависимости
// public – содержит в себе иконку, исходный index.html, логотипы, манифест и ненужную штуку. 
// В папке public менять только иконку и логотипы.
// src – папка проекта, в которой ведется сам проект, изначально там будут файлы App.js и index.js. 
// note: index.js трогать нельзя, а все начинается в App.js.

// В ректе есть классы и классовые компоненты, начнем со вторых.
// Реакт в строгом понимании это не фреймворк, а шаблонизатор. Центральным элементом реакта является понятие компонента. 
// Компонента может быть классом и функцией. Компонента обязательно всегда должна возвращать какую-то разметку. 
// В случае с классовой компонентой разметка возвращается в методе render. Поскольку react использует расширение над языком js, 
// то разметка пишется прямо в компоненте, не в строке. Компонентау умеет подключать отдельные стили. 
// Компоненты в разметке могут использовать другие компоненты, степень вложенности не ограничена. 
// При использовании компоненты в разметку другой, эта компонента прописывается как тег с названием совпадающим с названием компоненты. 
// У компоненты могут быть входящие аргументы(properties - props), которые могут ее настраивать или передавать какие-либо значения. 
// Их количество не ограничено. У любой компоненты есть понятие состояние, 
// это буквально объект с любыми даннами(лучше всего чтобы это были примитивы). 
// При изменении состояния компоненты, компонента автоматически перерисовывается.

// Установка реакта
// 1)	Установить node.js с интернета
// 2)	Скачать npm: npm i npx
// 3)   Зайти в папку, в которую хотис создать проект: cd C:\новая_папка
// 4)	создать проект: npx create-react-app 'Название'

// Архитектурные соглашения
// В src папки components, modules, pages (папка содержит в себе компоненты являющиеся страницами приложения, 
// каждая компонента должна лежать в отдельной папке и может лежать стиль предназначенный для этой компоненты, 
// название стилевого файла совпадает с названием компоненты).

// App.js
import React from 'react';
import Header from './components/Header/Header';
import Graph3D from './component/Graph3D/Graph3D';

class App extends React.Component {
constructor(props){
	super(props);
	this.state = {
		pageName: 'Graph3D'
	};
}

setPageName(name){
//Состояние компоненты меняется специальным методом 
	this.setState({pageName:name});
}

//Разметка обязательно должна быть одним тегом

render(){
	return(<div className='app'>
		<Header setPageName = {name => this.setPageName(name)}/>
		{this.state.pageName === 'Graph3D'?<Graph3D/>:<></>}
		</div>
	);
}
export default App;


// Header.js
import React from 'react';
class Header extends React.Component {
	constructor(props){
		super(props);
		this.setPageName = props.setPageName;
    }

    render(){
        return (<>
            <h1>Хедер!</h1>
            <button onClick = {() => this.setPageName('Graph3D')}>Графика 3D</button>
            //(мильон кнопок)
        </>)
	}
}

export default Header;


// Graph3D.js
import React from 'react';
class Graph3D extends React.Component{
	render(){
		return(<div>
				Трехмерный графоний!
		</div>);
		}
}
export default Graph3D;

